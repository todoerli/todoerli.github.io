<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TodoerLi&#39;s Blog</title>
  <subtitle>土豆泥的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.chunfengshini.com/"/>
  <updated>2017-01-23T02:48:23.767Z</updated>
  <id>http://www.chunfengshini.com/</id>
  
  <author>
    <name>TodoerLi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>字符集与字符编码笔记</title>
    <link href="http://www.chunfengshini.com/post/notes_for_character_set/"/>
    <id>http://www.chunfengshini.com/post/notes_for_character_set/</id>
    <published>2017-01-22T07:01:52.000Z</published>
    <updated>2017-01-23T02:48:23.767Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>早期字符编码、字符集和代码页等概念都是表达同一个意思。例如GB2312字符集、GB2312编码，936代码页，实际上说的是同一件事物。但是对于Unicode则不同，<strong>Unicode字符集</strong>只是定义了字符的集合和唯一编号，<strong>Unicode编码</strong>，则是对UTF-8、UCS-2/UTF-16等具体编码方案的统称。</p>
</blockquote>
<a id="more"></a>
<h1 id="术语解释"><a href="#术语解释" class="headerlink" title="术语解释"></a>术语解释</h1><hr>
<p><strong>1.1 <a href="http://www.cnblogs.com/skynet/archive/2011/05/03/2035105.html" title="字符集和字符编码（Charset &amp; Encoding）" target="_blank" rel="external">字符集(Charset)</a> </strong>: 是一个系统支持的所有抽象字符的集合。字符是各种文字和符号的总称，包括各国家文字、标点符号、图形符号、数字等。例如，ASCII字符集中定义了128个字符。</p>
<p><strong>1.2 <a href="http://www.kuqin.com/shuoit/20140728/341430.html" title="关于字符编码，你所需要知道的（ASCII,Unicode,Utf-8,GB2312…）" target="_blank" rel="external">字符码(Code Point)</a>
</strong>：指的就是字符集中每个字符的数字编号。例如ASCII字符集用0-127这连续的128个数字分别表示128个字符；GBK字符集使用区位码的方式为每个字符编号，首先定义一个94X94的矩阵，行称为”区”，列称为”位”，然后将所有国标汉字放入矩阵当中，这样每个汉字就可以用唯一的”区位码”来标识了。例如”中”字被放到54区第48位，因此字符码就是5448。而Unicode中将字符集按照一定的类别划分到0~16这17个层面（Planes）中，每个层面中拥有216=65536个字符码，因此Unicode总共拥有的字符码，也即是Unicode的字符空间总共有17*65536=1114112。</p>
<p><strong>1.3 字符编码(Character Encoding)</strong>：是将字符集中的字符码映射为用来存储的字节流的一种具体实现方案,也就是字符码存储成什么样的二进制形式。例如ASCII字符编码规定使用单字节中低位的7个比特去编码所有的字符。例如’A’的编号是65，用单字节表示就是0x41，因此写入存储设备的时候就是b’01000001’。</p>
<h1 id="从ASCII码说起"><a href="#从ASCII码说起" class="headerlink" title="从ASCII码说起"></a>从ASCII码说起</h1><hr>
<p><strong><a href="https://zh.wikipedia.org/wiki/ASCII" title="ASCII" target="_blank" rel="external">ASCII</a></strong>（<em> <strong>A</strong>merican <strong>S</strong>tandard <strong>C</strong>ode for <strong>I</strong>nformation <strong>I</strong>nterchange，美国信息交换标准代码</em>）是基于拉丁字母的一套电脑编码系统。ASCII的局限在于只能显示26个基本拉丁字母、阿拉伯数目字和英式标点符号,它主要用于显示现代英语。</p>
<p>我们所看到的文字，在计算机存储介质中存放的是二进制的比特流。每一个二进制位（bit）有0和1两种状态，因此八个二进制位就可以组合出256种状态，这被称为一个字节（byte）。也就是说，一个字节一共可以用来表示256种不同的状态，每一个状态对应一个符号，就是256个符号，从0000000到11111111。为了让计算机知道特定的二进制数字代表的是哪个字符，我们可以自己建立数字与字符的映射关系，但是为了在不同计算机上相互通信而不造成混乱，因此要大家遵守使用相同的标准告诉计算机哪个数字对应哪个字符。美国国家标准协会ANSI制定了一个标准，规定了常用字符的集合以及每个字符对应的二进制表示。</p>
<p><strong>ASCII字符集</strong>：主要包括95个可打印字符（英文大小写字符、阿拉伯数字和英式标点符号）和33个控制字符控制字符（回车键、退格、换行键等）。</p>
<p><strong>ASCII编码</strong>：将ASCII字符集转换为计算机可以接受的数字系统的数的规则。标准ASCII 码也叫基础ASCII码，使用7位二进制数（剩下的1位二进制为0）来表示所有的大写和小写字母，数字0到9、标点符号， 以及在美式英语中使用的特殊控制字符。</p>
<p><strong>编码</strong>的过程是将字符转换成存储的字节流。</p>
<p><strong>解码</strong>的过程是将存储的字节流解析为字符。</p>
<p>ASCII字符集中用数字编号65表示大写字母A的字符码，编码为二进制的字符流就是’01000001’。</p>
<p>英语用128个符号编码就够了，但是用来表示其他语言，128个符号是不够的。亚洲国家的文字，<a href="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html" title="字符编码笔记：ASCII，Unicode和UTF-8" target="_blank" rel="external">汉字使用的符号就多达10万左右</a>。因此在简体中文常见的编码方式GB2312中，使用两个字节表示一个汉字，理论上最多可以表示256x256=65536个符号。</p>
<h1 id="一统天下的Unicode"><a href="#一统天下的Unicode" class="headerlink" title="一统天下的Unicode"></a>一统天下的Unicode</h1><hr>
<p>世界上存在着多种编码方式，同一个二进制数字可以被解释成不同的符号。我们可以在一台机器上查阅不同语言的文档，但是我们仍然无法解决一个问题：在一份文档中显示所有字符。为了解决这个问题，我们需要一个巨大的字符集将世界上所有的符号纳入其中，给每一个符号赋予独一无二的字符码，这就是Unicode字符集。Unicode字符集将所有字符按照使用上的频繁度划分为17个层面（Plane），每个层面上有216=65536个字符码空间。其中第0个层面BMP，基本涵盖了当今世界用到的所有字符。但是<strong>Unicode只是一个符号集</strong>，它只规定了符号的字符码或者说二进制代码，却没有规定这个二进制代码应该如何存储。结果就出现了Unicode的多种存储方式，也就是Unicode编码。</p>
<h1 id="编码系统的变化"><a href="#编码系统的变化" class="headerlink" title="编码系统的变化"></a>编码系统的变化</h1><hr>
<p>在Unicode出现之前，所有的字符集都是和具体编码方案绑定在一起的，都是直接将字符和最终字节流绑定死了，例如ASCII编码系统规定使用7比特来编码ASCII字符集；GB2312以及GBK字符集，限定了使用最多2个字节来编码所有字符，并且规定了字节序。这样的编码系统通常用简单的查表，也就是通过代码页就可以直接将字符映射为存储设备上的字节流了。我们知道，英文字母只用一个字节表示就够了，如果Unicode统一规定，每个符号用3个或4个字节表示，那么每个英文字母前都必然有二到三个字节是0，这对于存储来说是极大的浪费。因此Unicode在设计上将字符集和字符编码方案分离开。也就是说，虽然每个字符在Unicode字符集中都能找到唯一确定的编号（字符码，又称Unicode码），但是决定最终字节流的却是具体的字符编码。例如同样是对Unicode字符’A’进行编码，UTF-8字符编码得到的字节流是0x41，而UTF-16（大端模式）得到的是0x00 0x41。</p>
<h1 id="常见Unicode编码之UTF-8"><a href="#常见Unicode编码之UTF-8" class="headerlink" title="常见Unicode编码之UTF-8"></a>常见Unicode编码之UTF-8</h1><hr>
<p>UTF-8应该是目前互联网上应用最广泛的一种Unicode<strong>编码方案</strong>。UTF-8用1~4个字节来编码字符，根据不同的符号而变化字节长度，<em>是一种变长的编码方案</em>。</p>
<blockquote>
<p><a href="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html" title="字符编码笔记：ASCII，Unicode和UTF-8" target="_blank" rel="external">UTF-8的编码规则很简单，只有二条</a>：<br>1.对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。<br>2.对于n字节的符号（n&gt;1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下的没有提及的二进制位，全部为这个符号的unicode码。</p>
</blockquote>
<p>具体参见维基百科中<a href="https://zh.wikipedia.org/wiki/UTF-8" title="UTF-8" target="_blank" rel="external">UTF-8</a>条目。</p>
<hr>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献:"></a>参考文献:</h1><p><a href="http://www.kuqin.com/shuoit/20140728/341430.html" title="关于字符编码，你所需要知道的（ASCII,Unicode,Utf-8,GB2312…）" target="_blank" rel="external">1.关于字符编码，你所需要知道的（ASCII,Unicode,Utf-8,GB2312…）</a><br><a href="http://www.cnblogs.com/skynet/archive/2011/05/03/2035105.html" title="字符集和字符编码（Charset &amp; Encoding）" target="_blank" rel="external">2.字符集和字符编码（Charset &amp; Encoding）</a><br><a href="https://zh.wikipedia.org/wiki/ASCII" title="ASCII" target="_blank" rel="external">3.ASCII</a><br><a href="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html" title="字符编码笔记：ASCII，Unicode和UTF-8" target="_blank" rel="external">4.字符编码笔记：ASCII，Unicode和UTF-8</a><br><a href="https://zh.wikipedia.org/wiki/UTF-8" title="UTF-8" target="_blank" rel="external">5.UTF-8</a></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;早期字符编码、字符集和代码页等概念都是表达同一个意思。例如GB2312字符集、GB2312编码，936代码页，实际上说的是同一件事物。但是对于Unicode则不同，&lt;strong&gt;Unicode字符集&lt;/strong&gt;只是定义了字符的集合和唯一编号，&lt;strong&gt;Unicode编码&lt;/strong&gt;，则是对UTF-8、UCS-2/UTF-16等具体编码方案的统称。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.chunfengshini.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="笔记" scheme="http://www.chunfengshini.com/categories/%E6%8A%80%E6%9C%AF/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="字符编码" scheme="http://www.chunfengshini.com/categories/%E6%8A%80%E6%9C%AF/%E7%AC%94%E8%AE%B0/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    
    
      <category term="字符集" scheme="http://www.chunfengshini.com/tags/%E5%AD%97%E7%AC%A6%E9%9B%86/"/>
    
      <category term="字符编码" scheme="http://www.chunfengshini.com/tags/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    
      <category term="ASCII" scheme="http://www.chunfengshini.com/tags/ASCII/"/>
    
      <category term="GB2312" scheme="http://www.chunfengshini.com/tags/GB2312/"/>
    
      <category term="Unicode" scheme="http://www.chunfengshini.com/tags/Unicode/"/>
    
      <category term="UTF-8" scheme="http://www.chunfengshini.com/tags/UTF-8/"/>
    
  </entry>
  
  <entry>
    <title>直到溪亭日暮，沉醉不知归路</title>
    <link href="http://www.chunfengshini.com/post/zhi_dao_xi_ting_ri_mu_chen_zui_bu_zhi_gui_lu/"/>
    <id>http://www.chunfengshini.com/post/zhi_dao_xi_ting_ri_mu_chen_zui_bu_zhi_gui_lu/</id>
    <published>2017-01-16T08:01:57.000Z</published>
    <updated>2017-01-20T07:36:28.460Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/post/zhi_dao_xi_ting_ri_mu_chen_zui_bu_zhi_gui_lu/乌镇.jpg" alt="乌镇"></p>
<p>没想到元旦这三天假，还挺长的，直从2016年放到了2017年。</p>
<p>我本打算用这三天宅起来睡觉追剧放空自己，无奈前面曾不假思索地答应了朋友说去学校找他玩。虽然不假思索可能也就意味着我当时是随口一说，可是话我既然已经说出口了，就没有不兑现的道理，谁让我就是这样靠谱的人呢。</p>
<p>于是2016年的最后一个周六，我6点被闹钟闹醒，早早的完成了一天的工作，偷了一圈儿朋友们的绿色能量后不断“重启”到了晌午。清醒过后，悲从中来，因为回去学校一趟倒腾地铁公交实在是太远了，不禁一下勾起了过去不堪回首的记忆，顿时打起了退堂鼓。可见人的情绪总是反复的，之前答应的事随时可能想反悔。之前想做的事后面也不一定想做，很喜欢的前女友有了现任也不一定敢再说喜欢，能一直喜欢保持言行合一实在是特别难。做个靠谱的人，能够对说过的话负责就很重要了。既如此，我还是想想其他办法吧。</p>
<p>于是，我就想能不能借我哥的车开过去呢。上次借车的时候我问他第二天要不要用车，他说没关系他不用，告诉我开多久就行。不过我第二天就打听到他其实是要上班的，把车给我开他坐地铁去公司，于是我当天下午我就加完油后把车还他了。他为我考虑我也得替他考虑不是？人都这样。这次我就先打听他上班的事，绝口不提借车，了解到他虽然今天不上班，明天就要上班，那么我就不跟他借车了，尽管我知道只要我开口我就有车开。另寻他法，直接租了一辆车开回了学校。 </p>
<p>回到了学校，还是熟悉的地方，到处是陌生的面孔，让人十分紧张，毕竟工作之后从来没有看到过这么多女生。迎面走来的学妹们打扮的花枝招展，洋溢着青春的气息，比起当年他们的学姐，现在学妹们的浓妆淡抹好像略胜一筹，难道作业不够多吗？考试不够难吗？学业压力还不够大吗？想到这里，我不禁为祖国的未来捏一把汗！既然如此，那我就为你们做点榜样吧，赶紧去图书馆转转。来到一楼的阅读空间，一下子就被眼前的一本书吸引，赶紧取下架来细细品读，书名叫《单身社会》。里面说得好像有那么点道理，不过貌似对面的一对学弟学妹不敢苟同，耳语后笑着拉着手就走开了。而我却沉迷学习无法自拔，一直读至深夜还读不完，想从中找寻出点真理可书中说的和我看到的不太一样，真是气不打一处来，还是先去吃饭吧。 </p>
<p>三五老友，相约戒酒。于是晚餐十分文明，一盆烤鱼，一锅牛肉，没了觥筹交错，也有杯盘狼藉，在这样的聚餐里也能悟出些道理——减肥这项事业，终将是一项长期的艰苦卓绝的斗争。饭罢，进得宿舍，胀着肚子在罪恶感中难以入睡。要不是朋友圈中好友们的提醒，当时钟指向0点的那一刻，我的内心可能不会起一丝波澜。想来可惜，如果此时我是睡着的，当2017年醒来，这一觉想想肯定都睡得特别香甜，毕竟是2016年就睡了。现实是，2017年1月1号的一大早，就被吵醒了，因为朋友不得不早起去东海办些有意义的事情。而我不能袖手旁观，任他孤单单的过去实在于心不忍，那就起来送他过去吧。 </p>
<p>一路向东，太阳还未升起，雾气很浓，置身其中，仿佛蓬莱仙境。海边有很多人在静静等着迎接新年的第一缕曙光，我也歪打正着有幸再次领略一番东海的日出。静静地看着东方海天交接的天空一点点的亮起来，看着太阳透过云层，露出她的头顶，起初看不大真切，像看躲在屏风后少女的脸，渐渐露出眼睛，鼻子……忽而整个脸都露出来了，红彤彤的，犹如依偎在恋人肩头少女的脸庞。2017年的第一缕阳光洒向了海面，洒向了大地，伴随着人们的欢呼、希冀和对新年的祝福，喷薄而出。这一刻，让我看到了希望：「它是站在海岸遥望海中已经看得见桅杆尖头了的一只航船，它是立于高山之巅远看东方已见光芒四射喷薄欲出的一轮朝日，它是躁动于母腹中的快要成熟了的一个婴儿。」我相信，「只要我们大家撸起袖子加油干，我们就一定能够走好我们这一代人的长征路。」</p>
<p>说干就干，行胜于言，我和朋友决定去乌镇，立马就走。驱车一百多公里，就来到了京杭大运河走过的江南水乡。误打误撞来到了西栅景区2号门口，准备买票进去之前才发现对乌镇景区一无所知，临时抱佛脚，拿起手机学习了下乌镇景点概况后就一头扎进了她的怀抱里，直到溪亭日暮，沉醉不知归路……</p>
<p><img src="/post/zhi_dao_xi_ting_ri_mu_chen_zui_bu_zhi_gui_lu/黄昏.jpg" alt="乌镇"><br><img src="/post/zhi_dao_xi_ting_ri_mu_chen_zui_bu_zhi_gui_lu/东海日出.jpg" alt="乌镇"><br><img src="/post/zhi_dao_xi_ting_ri_mu_chen_zui_bu_zhi_gui_lu/水岸.jpg" alt="乌镇"><br><img src="/post/zhi_dao_xi_ting_ri_mu_chen_zui_bu_zhi_gui_lu/乌镇邮局.jpg" alt="乌镇"><br><img src="/post/zhi_dao_xi_ting_ri_mu_chen_zui_bu_zhi_gui_lu/乌镇夜色.jpg" alt="乌镇"><br><img src="/post/zhi_dao_xi_ting_ri_mu_chen_zui_bu_zhi_gui_lu/民国时代.jpg" alt="乌镇"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/post/zhi_dao_xi_ting_ri_mu_chen_zui_bu_zhi_gui_lu/乌镇.jpg&quot; alt=&quot;乌镇&quot;&gt;&lt;/p&gt;
&lt;p&gt;没想到元旦这三天假，还挺长的，直从2016年放到了2017年。&lt;/p&gt;
&lt;p&gt;我本打算用这三天宅起来睡
    
    </summary>
    
      <category term="生活" scheme="http://www.chunfengshini.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="随笔" scheme="http://www.chunfengshini.com/categories/%E7%94%9F%E6%B4%BB/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="元旦" scheme="http://www.chunfengshini.com/tags/%E5%85%83%E6%97%A6/"/>
    
      <category term="日出" scheme="http://www.chunfengshini.com/tags/%E6%97%A5%E5%87%BA/"/>
    
      <category term="旅游" scheme="http://www.chunfengshini.com/tags/%E6%97%85%E6%B8%B8/"/>
    
      <category term="乌镇" scheme="http://www.chunfengshini.com/tags/%E4%B9%8C%E9%95%87/"/>
    
  </entry>
  
  <entry>
    <title>安卓Nexus 6P手机Root后通过FlashFire升级系统</title>
    <link href="http://www.chunfengshini.com/post/upgrading_rooted_nexus_6p_using_flashfire/"/>
    <id>http://www.chunfengshini.com/post/upgrading_rooted_nexus_6p_using_flashfire/</id>
    <published>2017-01-15T08:01:57.000Z</published>
    <updated>2017-01-20T07:37:36.002Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简要情况"><a href="#简要情况" class="headerlink" title="简要情况:"></a>简要情况:</h2><p>Nexus 6P升级到Android 7.0 系统后解锁、Root并安装了SuperSU、冰箱等软件。Root之后手机不能通过OTA直接升级系统，但是系统推送过来的安全补丁一直显示在通知栏，很不美观。于是就寻找一些方便的方法升级，了解到可以通过FlashFire这个软件更新系统并继续保持Root状态。</p>
<h2 id="升级步骤"><a href="#升级步骤" class="headerlink" title="升级步骤"></a>升级步骤</h2><ol>
<li>将冰箱中的所有应用解冻</li>
<li>通过<a href="https://developers.google.cn/android/images" target="_blank" rel="external">developers.google.cn/android/images</a> 网站下载最新Factory image.比如7.1.1 (N4F26J, Jan 2017).得到angler-n4f26j-factory-01874fd6.zip文件，大小1.25GB。拷贝到手机。</li>
<li><p>打开FlashFire软件，点击右下角+加号，选择Flash firmware package，找到保存到手机的angler-n4f26j-factory-01874fd6.zip文件并选择.FlashFire会分析该镜像文件。<br><img src="/post/upgrading_rooted_nexus_6p_using_flashfire/select-img-file.png" alt="Scanning archive"></p>
</li>
<li><p>选择刷入Boot、system、vendor和cache分区，不要选择recovery和data。<br><img src="/post/upgrading_rooted_nexus_6p_using_flashfire/ready-to-flash.png" alt="选好要刷入的分区"></p>
</li>
<li><p>点击FLASH开始更新，系统会自动关机重启，更新完之后会再次重启。<br><img src="/post/upgrading_rooted_nexus_6p_using_flashfire/notice.png" alt="提示信息"><br><img src="/post/upgrading_rooted_nexus_6p_using_flashfire/flashing.jpg" alt="flashing"><br><img src="/post/upgrading_rooted_nexus_6p_using_flashfire/finishing-update.png" alt="finishing"><br><img src="/post/upgrading_rooted_nexus_6p_using_flashfire/up-to-date.png" alt="up to date"></p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简要情况&quot;&gt;&lt;a href=&quot;#简要情况&quot; class=&quot;headerlink&quot; title=&quot;简要情况:&quot;&gt;&lt;/a&gt;简要情况:&lt;/h2&gt;&lt;p&gt;Nexus 6P升级到Android 7.0 系统后解锁、Root并安装了SuperSU、冰箱等软件。Root之后手机不
    
    </summary>
    
      <category term="生活" scheme="http://www.chunfengshini.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="玩机" scheme="http://www.chunfengshini.com/categories/%E7%94%9F%E6%B4%BB/%E7%8E%A9%E6%9C%BA/"/>
    
    
      <category term="玩机" scheme="http://www.chunfengshini.com/tags/%E7%8E%A9%E6%9C%BA/"/>
    
      <category term="Nexus 6P" scheme="http://www.chunfengshini.com/tags/Nexus-6P/"/>
    
      <category term="FlashFire" scheme="http://www.chunfengshini.com/tags/FlashFire/"/>
    
      <category term="Root" scheme="http://www.chunfengshini.com/tags/Root/"/>
    
  </entry>
  
</feed>
